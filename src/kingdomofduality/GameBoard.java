/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package kingdomofduality;

import java.beans.XMLDecoder;
import java.io.ByteArrayInputStream;
import java.io.File;
import java.lang.reflect.Method;
import java.nio.file.Path;
import java.nio.file.Paths;
import javax.imageio.ImageIO;
import javax.swing.ImageIcon;
import javax.swing.JOptionPane;
import javax.swing.*;


/**
 *
 * @author Beylix
 */
public class GameBoard extends javax.swing.JFrame {

    /**
     * Creates new form GameBoard
     */
    public GameBoard() {
        initComponents();
    }
    
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        Map_0_0 = new javax.swing.JLabel();
        Map_0_2 = new javax.swing.JLabel();
        Map_0_3 = new javax.swing.JLabel();
        Map_0_4 = new javax.swing.JLabel();
        Map_0_5 = new javax.swing.JLabel();
        Map_0_6 = new javax.swing.JLabel();
        Map_0_7 = new javax.swing.JLabel();
        Map_0_1 = new javax.swing.JLabel();
        Map_1_0 = new javax.swing.JLabel();
        Map_1_1 = new javax.swing.JLabel();
        Map_1_2 = new javax.swing.JLabel();
        Map_1_3 = new javax.swing.JLabel();
        Map_1_4 = new javax.swing.JLabel();
        Map_1_5 = new javax.swing.JLabel();
        Map_1_6 = new javax.swing.JLabel();
        Map_1_7 = new javax.swing.JLabel();
        Map_2_0 = new javax.swing.JLabel();
        Map_2_1 = new javax.swing.JLabel();
        Map_2_2 = new javax.swing.JLabel();
        Map_2_3 = new javax.swing.JLabel();
        Map_2_4 = new javax.swing.JLabel();
        Map_2_5 = new javax.swing.JLabel();
        Map_2_6 = new javax.swing.JLabel();
        Map_2_7 = new javax.swing.JLabel();
        Map_3_0 = new javax.swing.JLabel();
        Map_3_1 = new javax.swing.JLabel();
        Map_3_2 = new javax.swing.JLabel();
        Map_3_3 = new javax.swing.JLabel();
        Map_3_4 = new javax.swing.JLabel();
        Map_3_5 = new javax.swing.JLabel();
        Map_3_6 = new javax.swing.JLabel();
        Map_3_7 = new javax.swing.JLabel();
        Map_4_0 = new javax.swing.JLabel();
        Map_4_1 = new javax.swing.JLabel();
        Map_4_2 = new javax.swing.JLabel();
        Map_4_3 = new javax.swing.JLabel();
        Map_4_4 = new javax.swing.JLabel();
        Map_4_5 = new javax.swing.JLabel();
        Map_4_6 = new javax.swing.JLabel();
        Map_4_7 = new javax.swing.JLabel();
        Map_5_0 = new javax.swing.JLabel();
        Map_5_1 = new javax.swing.JLabel();
        Map_5_2 = new javax.swing.JLabel();
        Map_5_3 = new javax.swing.JLabel();
        Map_5_4 = new javax.swing.JLabel();
        Map_5_5 = new javax.swing.JLabel();
        Map_5_6 = new javax.swing.JLabel();
        Map_5_7 = new javax.swing.JLabel();
        Map_6_0 = new javax.swing.JLabel();
        Map_6_1 = new javax.swing.JLabel();
        Map_6_2 = new javax.swing.JLabel();
        Map_6_3 = new javax.swing.JLabel();
        Map_6_4 = new javax.swing.JLabel();
        Map_6_5 = new javax.swing.JLabel();
        Map_6_6 = new javax.swing.JLabel();
        Map_6_7 = new javax.swing.JLabel();
        Map_7_0 = new javax.swing.JLabel();
        Map_7_1 = new javax.swing.JLabel();
        Map_7_2 = new javax.swing.JLabel();
        Map_7_3 = new javax.swing.JLabel();
        Map_7_4 = new javax.swing.JLabel();
        Map_7_5 = new javax.swing.JLabel();
        Map_7_6 = new javax.swing.JLabel();
        Map_7_7 = new javax.swing.JLabel();
        jPanel2 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        playerNameLabelYour = new javax.swing.JLabel();
        playerNameLabelPCAI = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        whiteStonesNumberLabel = new javax.swing.JLabel();
        blackStonesNumberLabel = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setBackground(new java.awt.Color(0, 0, 0));
        setLocation(new java.awt.Point(400, 400));
        setResizable(false);

        jPanel1.setBackground(new java.awt.Color(0, 0, 0));

        Map_0_0.setBackground(new java.awt.Color(0, 0, 0));
        Map_0_0.setForeground(new java.awt.Color(255, 255, 255));
        Map_0_0.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        Map_0_0.setIcon(new javax.swing.ImageIcon(getClass().getResource("/src/NoStone.png"))); // NOI18N
        Map_0_0.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                Map_0_0MouseClicked(evt);
            }
        });

        Map_0_2.setBackground(new java.awt.Color(0, 0, 0));
        Map_0_2.setForeground(new java.awt.Color(255, 255, 255));
        Map_0_2.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        Map_0_2.setIcon(new javax.swing.ImageIcon(getClass().getResource("/src/NoStone.png"))); // NOI18N
        Map_0_2.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                Map_0_2MouseClicked(evt);
            }
        });

        Map_0_3.setBackground(new java.awt.Color(0, 0, 0));
        Map_0_3.setForeground(new java.awt.Color(255, 255, 255));
        Map_0_3.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        Map_0_3.setIcon(new javax.swing.ImageIcon(getClass().getResource("/src/NoStone.png"))); // NOI18N
        Map_0_3.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                Map_0_3MouseClicked(evt);
            }
        });

        Map_0_4.setBackground(new java.awt.Color(0, 0, 0));
        Map_0_4.setForeground(new java.awt.Color(255, 255, 255));
        Map_0_4.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        Map_0_4.setIcon(new javax.swing.ImageIcon(getClass().getResource("/src/NoStone.png"))); // NOI18N
        Map_0_4.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                Map_0_4MouseClicked(evt);
            }
        });

        Map_0_5.setBackground(new java.awt.Color(0, 0, 0));
        Map_0_5.setForeground(new java.awt.Color(255, 255, 255));
        Map_0_5.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        Map_0_5.setIcon(new javax.swing.ImageIcon(getClass().getResource("/src/NoStone.png"))); // NOI18N
        Map_0_5.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                Map_0_5MouseClicked(evt);
            }
        });

        Map_0_6.setBackground(new java.awt.Color(0, 0, 0));
        Map_0_6.setForeground(new java.awt.Color(255, 255, 255));
        Map_0_6.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        Map_0_6.setIcon(new javax.swing.ImageIcon(getClass().getResource("/src/NoStone.png"))); // NOI18N
        Map_0_6.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                Map_0_6MouseClicked(evt);
            }
        });

        Map_0_7.setBackground(new java.awt.Color(0, 0, 0));
        Map_0_7.setForeground(new java.awt.Color(255, 255, 255));
        Map_0_7.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        Map_0_7.setIcon(new javax.swing.ImageIcon(getClass().getResource("/src/NoStone.png"))); // NOI18N
        Map_0_7.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                Map_0_7MouseClicked(evt);
            }
        });

        Map_0_1.setBackground(new java.awt.Color(0, 0, 0));
        Map_0_1.setForeground(new java.awt.Color(255, 255, 255));
        Map_0_1.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        Map_0_1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/src/NoStone.png"))); // NOI18N
        Map_0_1.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                Map_0_1MouseClicked(evt);
            }
        });

        Map_1_0.setBackground(new java.awt.Color(0, 0, 0));
        Map_1_0.setForeground(new java.awt.Color(255, 255, 255));
        Map_1_0.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        Map_1_0.setIcon(new javax.swing.ImageIcon(getClass().getResource("/src/NoStone.png"))); // NOI18N
        Map_1_0.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                Map_1_0MouseClicked(evt);
            }
        });

        Map_1_1.setBackground(new java.awt.Color(0, 0, 0));
        Map_1_1.setForeground(new java.awt.Color(255, 255, 255));
        Map_1_1.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        Map_1_1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/src/NoStone.png"))); // NOI18N
        Map_1_1.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                Map_1_1MouseClicked(evt);
            }
        });

        Map_1_2.setBackground(new java.awt.Color(0, 0, 0));
        Map_1_2.setForeground(new java.awt.Color(255, 255, 255));
        Map_1_2.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        Map_1_2.setIcon(new javax.swing.ImageIcon(getClass().getResource("/src/NoStone.png"))); // NOI18N
        Map_1_2.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                Map_1_2MouseClicked(evt);
            }
        });

        Map_1_3.setBackground(new java.awt.Color(0, 0, 0));
        Map_1_3.setForeground(new java.awt.Color(255, 255, 255));
        Map_1_3.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        Map_1_3.setIcon(new javax.swing.ImageIcon(getClass().getResource("/src/NoStone.png"))); // NOI18N
        Map_1_3.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                Map_1_3MouseClicked(evt);
            }
        });

        Map_1_4.setBackground(new java.awt.Color(0, 0, 0));
        Map_1_4.setForeground(new java.awt.Color(255, 255, 255));
        Map_1_4.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        Map_1_4.setIcon(new javax.swing.ImageIcon(getClass().getResource("/src/NoStone.png"))); // NOI18N
        Map_1_4.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                Map_1_4MouseClicked(evt);
            }
        });

        Map_1_5.setBackground(new java.awt.Color(0, 0, 0));
        Map_1_5.setForeground(new java.awt.Color(255, 255, 255));
        Map_1_5.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        Map_1_5.setIcon(new javax.swing.ImageIcon(getClass().getResource("/src/NoStone.png"))); // NOI18N
        Map_1_5.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                Map_1_5MouseClicked(evt);
            }
        });

        Map_1_6.setBackground(new java.awt.Color(0, 0, 0));
        Map_1_6.setForeground(new java.awt.Color(255, 255, 255));
        Map_1_6.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        Map_1_6.setIcon(new javax.swing.ImageIcon(getClass().getResource("/src/NoStone.png"))); // NOI18N
        Map_1_6.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                Map_1_6MouseClicked(evt);
            }
        });

        Map_1_7.setBackground(new java.awt.Color(0, 0, 0));
        Map_1_7.setForeground(new java.awt.Color(255, 255, 255));
        Map_1_7.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        Map_1_7.setIcon(new javax.swing.ImageIcon(getClass().getResource("/src/NoStone.png"))); // NOI18N
        Map_1_7.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                Map_1_7MouseClicked(evt);
            }
        });

        Map_2_0.setBackground(new java.awt.Color(0, 0, 0));
        Map_2_0.setForeground(new java.awt.Color(255, 255, 255));
        Map_2_0.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        Map_2_0.setIcon(new javax.swing.ImageIcon(getClass().getResource("/src/NoStone.png"))); // NOI18N
        Map_2_0.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                Map_2_0MouseClicked(evt);
            }
        });

        Map_2_1.setBackground(new java.awt.Color(0, 0, 0));
        Map_2_1.setForeground(new java.awt.Color(255, 255, 255));
        Map_2_1.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        Map_2_1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/src/NoStone.png"))); // NOI18N
        Map_2_1.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                Map_2_1MouseClicked(evt);
            }
        });

        Map_2_2.setBackground(new java.awt.Color(0, 0, 0));
        Map_2_2.setForeground(new java.awt.Color(255, 255, 255));
        Map_2_2.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        Map_2_2.setIcon(new javax.swing.ImageIcon(getClass().getResource("/src/NoStone.png"))); // NOI18N
        Map_2_2.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                Map_2_2MouseClicked(evt);
            }
        });

        Map_2_3.setBackground(new java.awt.Color(0, 0, 0));
        Map_2_3.setForeground(new java.awt.Color(255, 255, 255));
        Map_2_3.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        Map_2_3.setIcon(new javax.swing.ImageIcon(getClass().getResource("/src/NoStone.png"))); // NOI18N
        Map_2_3.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                Map_2_3MouseClicked(evt);
            }
        });

        Map_2_4.setBackground(new java.awt.Color(0, 0, 0));
        Map_2_4.setForeground(new java.awt.Color(255, 255, 255));
        Map_2_4.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        Map_2_4.setIcon(new javax.swing.ImageIcon(getClass().getResource("/src/NoStone.png"))); // NOI18N
        Map_2_4.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                Map_2_4MouseClicked(evt);
            }
        });

        Map_2_5.setBackground(new java.awt.Color(0, 0, 0));
        Map_2_5.setForeground(new java.awt.Color(255, 255, 255));
        Map_2_5.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        Map_2_5.setIcon(new javax.swing.ImageIcon(getClass().getResource("/src/NoStone.png"))); // NOI18N
        Map_2_5.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                Map_2_5MouseClicked(evt);
            }
        });

        Map_2_6.setBackground(new java.awt.Color(0, 0, 0));
        Map_2_6.setForeground(new java.awt.Color(255, 255, 255));
        Map_2_6.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        Map_2_6.setIcon(new javax.swing.ImageIcon(getClass().getResource("/src/NoStone.png"))); // NOI18N
        Map_2_6.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                Map_2_6MouseClicked(evt);
            }
        });

        Map_2_7.setBackground(new java.awt.Color(0, 0, 0));
        Map_2_7.setForeground(new java.awt.Color(255, 255, 255));
        Map_2_7.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        Map_2_7.setIcon(new javax.swing.ImageIcon(getClass().getResource("/src/NoStone.png"))); // NOI18N
        Map_2_7.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                Map_2_7MouseClicked(evt);
            }
        });

        Map_3_0.setBackground(new java.awt.Color(0, 0, 0));
        Map_3_0.setForeground(new java.awt.Color(255, 255, 255));
        Map_3_0.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        Map_3_0.setIcon(new javax.swing.ImageIcon(getClass().getResource("/src/NoStone.png"))); // NOI18N
        Map_3_0.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                Map_3_0MouseClicked(evt);
            }
        });

        Map_3_1.setBackground(new java.awt.Color(0, 0, 0));
        Map_3_1.setForeground(new java.awt.Color(255, 255, 255));
        Map_3_1.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        Map_3_1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/src/NoStone.png"))); // NOI18N
        Map_3_1.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                Map_3_1MouseClicked(evt);
            }
        });

        Map_3_2.setBackground(new java.awt.Color(0, 0, 0));
        Map_3_2.setForeground(new java.awt.Color(255, 255, 255));
        Map_3_2.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        Map_3_2.setIcon(new javax.swing.ImageIcon(getClass().getResource("/src/NoStone.png"))); // NOI18N
        Map_3_2.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                Map_3_2MouseClicked(evt);
            }
        });

        Map_3_3.setBackground(new java.awt.Color(0, 0, 0));
        Map_3_3.setForeground(new java.awt.Color(255, 255, 255));
        Map_3_3.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        Map_3_3.setIcon(new javax.swing.ImageIcon(getClass().getResource("/src/NoStone.png"))); // NOI18N
        Map_3_3.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                Map_3_3MouseClicked(evt);
            }
        });

        Map_3_4.setBackground(new java.awt.Color(0, 0, 0));
        Map_3_4.setForeground(new java.awt.Color(255, 255, 255));
        Map_3_4.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        Map_3_4.setIcon(new javax.swing.ImageIcon(getClass().getResource("/src/NoStone.png"))); // NOI18N
        Map_3_4.setToolTipText("");
        Map_3_4.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                Map_3_4MouseClicked(evt);
            }
        });

        Map_3_5.setBackground(new java.awt.Color(0, 0, 0));
        Map_3_5.setForeground(new java.awt.Color(255, 255, 255));
        Map_3_5.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        Map_3_5.setIcon(new javax.swing.ImageIcon(getClass().getResource("/src/NoStone.png"))); // NOI18N
        Map_3_5.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                Map_3_5MouseClicked(evt);
            }
        });

        Map_3_6.setBackground(new java.awt.Color(0, 0, 0));
        Map_3_6.setForeground(new java.awt.Color(255, 255, 255));
        Map_3_6.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        Map_3_6.setIcon(new javax.swing.ImageIcon(getClass().getResource("/src/NoStone.png"))); // NOI18N
        Map_3_6.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                Map_3_6MouseClicked(evt);
            }
        });

        Map_3_7.setBackground(new java.awt.Color(0, 0, 0));
        Map_3_7.setForeground(new java.awt.Color(255, 255, 255));
        Map_3_7.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        Map_3_7.setIcon(new javax.swing.ImageIcon(getClass().getResource("/src/NoStone.png"))); // NOI18N
        Map_3_7.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                Map_3_7MouseClicked(evt);
            }
        });

        Map_4_0.setBackground(new java.awt.Color(0, 0, 0));
        Map_4_0.setForeground(new java.awt.Color(255, 255, 255));
        Map_4_0.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        Map_4_0.setIcon(new javax.swing.ImageIcon(getClass().getResource("/src/NoStone.png"))); // NOI18N
        Map_4_0.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                Map_4_0MouseClicked(evt);
            }
        });

        Map_4_1.setBackground(new java.awt.Color(0, 0, 0));
        Map_4_1.setForeground(new java.awt.Color(255, 255, 255));
        Map_4_1.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        Map_4_1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/src/NoStone.png"))); // NOI18N
        Map_4_1.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                Map_4_1MouseClicked(evt);
            }
        });

        Map_4_2.setBackground(new java.awt.Color(0, 0, 0));
        Map_4_2.setForeground(new java.awt.Color(255, 255, 255));
        Map_4_2.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        Map_4_2.setIcon(new javax.swing.ImageIcon(getClass().getResource("/src/NoStone.png"))); // NOI18N
        Map_4_2.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                Map_4_2MouseClicked(evt);
            }
        });

        Map_4_3.setBackground(new java.awt.Color(0, 0, 0));
        Map_4_3.setForeground(new java.awt.Color(255, 255, 255));
        Map_4_3.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        Map_4_3.setIcon(new javax.swing.ImageIcon(getClass().getResource("/src/NoStone.png"))); // NOI18N
        Map_4_3.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                Map_4_3MouseClicked(evt);
            }
        });

        Map_4_4.setBackground(new java.awt.Color(0, 0, 0));
        Map_4_4.setForeground(new java.awt.Color(255, 255, 255));
        Map_4_4.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        Map_4_4.setIcon(new javax.swing.ImageIcon(getClass().getResource("/src/NoStone.png"))); // NOI18N
        Map_4_4.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                Map_4_4MouseClicked(evt);
            }
        });

        Map_4_5.setBackground(new java.awt.Color(0, 0, 0));
        Map_4_5.setForeground(new java.awt.Color(255, 255, 255));
        Map_4_5.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        Map_4_5.setIcon(new javax.swing.ImageIcon(getClass().getResource("/src/NoStone.png"))); // NOI18N
        Map_4_5.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                Map_4_5MouseClicked(evt);
            }
        });

        Map_4_6.setBackground(new java.awt.Color(0, 0, 0));
        Map_4_6.setForeground(new java.awt.Color(255, 255, 255));
        Map_4_6.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        Map_4_6.setIcon(new javax.swing.ImageIcon(getClass().getResource("/src/NoStone.png"))); // NOI18N
        Map_4_6.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                Map_4_6MouseClicked(evt);
            }
        });

        Map_4_7.setBackground(new java.awt.Color(0, 0, 0));
        Map_4_7.setForeground(new java.awt.Color(255, 255, 255));
        Map_4_7.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        Map_4_7.setIcon(new javax.swing.ImageIcon(getClass().getResource("/src/NoStone.png"))); // NOI18N
        Map_4_7.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                Map_4_7MouseClicked(evt);
            }
        });

        Map_5_0.setBackground(new java.awt.Color(0, 0, 0));
        Map_5_0.setForeground(new java.awt.Color(255, 255, 255));
        Map_5_0.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        Map_5_0.setIcon(new javax.swing.ImageIcon(getClass().getResource("/src/NoStone.png"))); // NOI18N
        Map_5_0.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                Map_5_0MouseClicked(evt);
            }
        });

        Map_5_1.setBackground(new java.awt.Color(0, 0, 0));
        Map_5_1.setForeground(new java.awt.Color(255, 255, 255));
        Map_5_1.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        Map_5_1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/src/NoStone.png"))); // NOI18N
        Map_5_1.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                Map_5_1MouseClicked(evt);
            }
        });

        Map_5_2.setBackground(new java.awt.Color(0, 0, 0));
        Map_5_2.setForeground(new java.awt.Color(255, 255, 255));
        Map_5_2.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        Map_5_2.setIcon(new javax.swing.ImageIcon(getClass().getResource("/src/NoStone.png"))); // NOI18N
        Map_5_2.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                Map_5_2MouseClicked(evt);
            }
        });

        Map_5_3.setBackground(new java.awt.Color(0, 0, 0));
        Map_5_3.setForeground(new java.awt.Color(255, 255, 255));
        Map_5_3.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        Map_5_3.setIcon(new javax.swing.ImageIcon(getClass().getResource("/src/NoStone.png"))); // NOI18N
        Map_5_3.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                Map_5_3MouseClicked(evt);
            }
        });

        Map_5_4.setBackground(new java.awt.Color(0, 0, 0));
        Map_5_4.setForeground(new java.awt.Color(255, 255, 255));
        Map_5_4.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        Map_5_4.setIcon(new javax.swing.ImageIcon(getClass().getResource("/src/NoStone.png"))); // NOI18N
        Map_5_4.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                Map_5_4MouseClicked(evt);
            }
        });

        Map_5_5.setBackground(new java.awt.Color(0, 0, 0));
        Map_5_5.setForeground(new java.awt.Color(255, 255, 255));
        Map_5_5.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        Map_5_5.setIcon(new javax.swing.ImageIcon(getClass().getResource("/src/NoStone.png"))); // NOI18N
        Map_5_5.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                Map_5_5MouseClicked(evt);
            }
        });

        Map_5_6.setBackground(new java.awt.Color(0, 0, 0));
        Map_5_6.setForeground(new java.awt.Color(255, 255, 255));
        Map_5_6.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        Map_5_6.setIcon(new javax.swing.ImageIcon(getClass().getResource("/src/NoStone.png"))); // NOI18N
        Map_5_6.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                Map_5_6MouseClicked(evt);
            }
        });

        Map_5_7.setBackground(new java.awt.Color(0, 0, 0));
        Map_5_7.setForeground(new java.awt.Color(255, 255, 255));
        Map_5_7.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        Map_5_7.setIcon(new javax.swing.ImageIcon(getClass().getResource("/src/NoStone.png"))); // NOI18N
        Map_5_7.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                Map_5_7MouseClicked(evt);
            }
        });

        Map_6_0.setBackground(new java.awt.Color(0, 0, 0));
        Map_6_0.setForeground(new java.awt.Color(255, 255, 255));
        Map_6_0.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        Map_6_0.setIcon(new javax.swing.ImageIcon(getClass().getResource("/src/NoStone.png"))); // NOI18N
        Map_6_0.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                Map_6_0MouseClicked(evt);
            }
        });

        Map_6_1.setBackground(new java.awt.Color(0, 0, 0));
        Map_6_1.setForeground(new java.awt.Color(255, 255, 255));
        Map_6_1.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        Map_6_1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/src/NoStone.png"))); // NOI18N
        Map_6_1.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                Map_6_1MouseClicked(evt);
            }
        });

        Map_6_2.setBackground(new java.awt.Color(0, 0, 0));
        Map_6_2.setForeground(new java.awt.Color(255, 255, 255));
        Map_6_2.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        Map_6_2.setIcon(new javax.swing.ImageIcon(getClass().getResource("/src/NoStone.png"))); // NOI18N
        Map_6_2.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                Map_6_2MouseClicked(evt);
            }
        });

        Map_6_3.setBackground(new java.awt.Color(0, 0, 0));
        Map_6_3.setForeground(new java.awt.Color(255, 255, 255));
        Map_6_3.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        Map_6_3.setIcon(new javax.swing.ImageIcon(getClass().getResource("/src/NoStone.png"))); // NOI18N
        Map_6_3.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                Map_6_3MouseClicked(evt);
            }
        });

        Map_6_4.setBackground(new java.awt.Color(0, 0, 0));
        Map_6_4.setForeground(new java.awt.Color(255, 255, 255));
        Map_6_4.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        Map_6_4.setIcon(new javax.swing.ImageIcon(getClass().getResource("/src/NoStone.png"))); // NOI18N
        Map_6_4.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                Map_6_4MouseClicked(evt);
            }
        });

        Map_6_5.setBackground(new java.awt.Color(0, 0, 0));
        Map_6_5.setForeground(new java.awt.Color(255, 255, 255));
        Map_6_5.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        Map_6_5.setIcon(new javax.swing.ImageIcon(getClass().getResource("/src/NoStone.png"))); // NOI18N
        Map_6_5.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                Map_6_5MouseClicked(evt);
            }
        });

        Map_6_6.setBackground(new java.awt.Color(0, 0, 0));
        Map_6_6.setForeground(new java.awt.Color(255, 255, 255));
        Map_6_6.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        Map_6_6.setIcon(new javax.swing.ImageIcon(getClass().getResource("/src/NoStone.png"))); // NOI18N
        Map_6_6.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                Map_6_6MouseClicked(evt);
            }
        });

        Map_6_7.setBackground(new java.awt.Color(0, 0, 0));
        Map_6_7.setForeground(new java.awt.Color(255, 255, 255));
        Map_6_7.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        Map_6_7.setIcon(new javax.swing.ImageIcon(getClass().getResource("/src/NoStone.png"))); // NOI18N
        Map_6_7.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                Map_6_7MouseClicked(evt);
            }
        });

        Map_7_0.setBackground(new java.awt.Color(0, 0, 0));
        Map_7_0.setForeground(new java.awt.Color(255, 255, 255));
        Map_7_0.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        Map_7_0.setIcon(new javax.swing.ImageIcon(getClass().getResource("/src/NoStone.png"))); // NOI18N
        Map_7_0.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                Map_7_0MouseClicked(evt);
            }
        });

        Map_7_1.setBackground(new java.awt.Color(0, 0, 0));
        Map_7_1.setForeground(new java.awt.Color(255, 255, 255));
        Map_7_1.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        Map_7_1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/src/NoStone.png"))); // NOI18N
        Map_7_1.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                Map_7_1MouseClicked(evt);
            }
        });

        Map_7_2.setBackground(new java.awt.Color(0, 0, 0));
        Map_7_2.setForeground(new java.awt.Color(255, 255, 255));
        Map_7_2.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        Map_7_2.setIcon(new javax.swing.ImageIcon(getClass().getResource("/src/NoStone.png"))); // NOI18N
        Map_7_2.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                Map_7_2MouseClicked(evt);
            }
        });

        Map_7_3.setBackground(new java.awt.Color(0, 0, 0));
        Map_7_3.setForeground(new java.awt.Color(255, 255, 255));
        Map_7_3.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        Map_7_3.setIcon(new javax.swing.ImageIcon(getClass().getResource("/src/NoStone.png"))); // NOI18N
        Map_7_3.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                Map_7_3MouseClicked(evt);
            }
        });

        Map_7_4.setBackground(new java.awt.Color(0, 0, 0));
        Map_7_4.setForeground(new java.awt.Color(255, 255, 255));
        Map_7_4.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        Map_7_4.setIcon(new javax.swing.ImageIcon(getClass().getResource("/src/NoStone.png"))); // NOI18N
        Map_7_4.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                Map_7_4MouseClicked(evt);
            }
        });

        Map_7_5.setBackground(new java.awt.Color(0, 0, 0));
        Map_7_5.setForeground(new java.awt.Color(255, 255, 255));
        Map_7_5.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        Map_7_5.setIcon(new javax.swing.ImageIcon(getClass().getResource("/src/NoStone.png"))); // NOI18N
        Map_7_5.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                Map_7_5MouseClicked(evt);
            }
        });

        Map_7_6.setBackground(new java.awt.Color(0, 0, 0));
        Map_7_6.setForeground(new java.awt.Color(255, 255, 255));
        Map_7_6.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        Map_7_6.setIcon(new javax.swing.ImageIcon(getClass().getResource("/src/NoStone.png"))); // NOI18N
        Map_7_6.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                Map_7_6MouseClicked(evt);
            }
        });

        Map_7_7.setBackground(new java.awt.Color(0, 0, 0));
        Map_7_7.setForeground(new java.awt.Color(255, 255, 255));
        Map_7_7.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        Map_7_7.setIcon(new javax.swing.ImageIcon(getClass().getResource("/src/NoStone.png"))); // NOI18N
        Map_7_7.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                Map_7_7MouseClicked(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(Map_2_0)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(Map_2_1)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(Map_2_2)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(Map_2_3)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(Map_2_4)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(Map_2_5)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(Map_2_6)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(Map_2_7))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(Map_3_0)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(Map_3_1)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(Map_3_2)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(Map_3_3)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(Map_3_4)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(Map_3_5)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(Map_3_6)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(Map_3_7))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                            .addGroup(javax.swing.GroupLayout.Alignment.LEADING, jPanel1Layout.createSequentialGroup()
                                .addComponent(Map_5_0)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(Map_5_1)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(Map_5_2)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(Map_5_3))
                            .addGroup(javax.swing.GroupLayout.Alignment.LEADING, jPanel1Layout.createSequentialGroup()
                                .addComponent(Map_4_0)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(Map_4_1)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(Map_4_2)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(Map_4_3)))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addComponent(Map_4_4)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(Map_4_5)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(Map_4_6)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(Map_4_7))
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addComponent(Map_5_4)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(Map_5_5)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(Map_5_6)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(Map_5_7))))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(Map_6_0)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(Map_6_1)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(Map_6_2)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(Map_6_3)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(Map_6_4)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(Map_6_5)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(Map_6_6)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(Map_6_7))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(Map_7_0)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(Map_7_1)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(Map_7_2)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(Map_7_3)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(Map_7_4)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(Map_7_5)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(Map_7_6)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(Map_7_7))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                            .addComponent(Map_0_0)
                            .addComponent(Map_1_0))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addComponent(Map_1_1)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(Map_1_2)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(Map_1_3)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(Map_1_4)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(Map_1_5)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(Map_1_6)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(Map_1_7))
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                                .addComponent(Map_0_1)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(Map_0_2)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(Map_0_3)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(Map_0_4)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(Map_0_5)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(Map_0_6)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(Map_0_7)))))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(Map_0_7)
                    .addComponent(Map_0_2)
                    .addComponent(Map_0_3)
                    .addComponent(Map_0_4)
                    .addComponent(Map_0_5)
                    .addComponent(Map_0_6)
                    .addComponent(Map_0_0)
                    .addComponent(Map_0_1))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(Map_1_1)
                    .addComponent(Map_1_2)
                    .addComponent(Map_1_0)
                    .addComponent(Map_1_3)
                    .addComponent(Map_1_4)
                    .addComponent(Map_1_5)
                    .addComponent(Map_1_6)
                    .addComponent(Map_1_7))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(Map_2_0)
                    .addComponent(Map_2_1)
                    .addComponent(Map_2_2)
                    .addComponent(Map_2_3)
                    .addComponent(Map_2_4)
                    .addComponent(Map_2_5)
                    .addComponent(Map_2_6)
                    .addComponent(Map_2_7))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(Map_3_0)
                    .addComponent(Map_3_1)
                    .addComponent(Map_3_2)
                    .addComponent(Map_3_3)
                    .addComponent(Map_3_4)
                    .addComponent(Map_3_5)
                    .addComponent(Map_3_6)
                    .addComponent(Map_3_7))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(Map_4_0)
                    .addComponent(Map_4_1)
                    .addComponent(Map_4_2)
                    .addComponent(Map_4_3)
                    .addComponent(Map_4_4)
                    .addComponent(Map_4_5)
                    .addComponent(Map_4_6)
                    .addComponent(Map_4_7))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(Map_5_0)
                    .addComponent(Map_5_3)
                    .addComponent(Map_5_4)
                    .addComponent(Map_5_5)
                    .addComponent(Map_5_6)
                    .addComponent(Map_5_7)
                    .addComponent(Map_5_2)
                    .addComponent(Map_5_1))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(Map_6_0)
                    .addComponent(Map_6_1)
                    .addComponent(Map_6_2)
                    .addComponent(Map_6_3)
                    .addComponent(Map_6_4)
                    .addComponent(Map_6_5)
                    .addComponent(Map_6_6)
                    .addComponent(Map_6_7))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(Map_7_0)
                    .addComponent(Map_7_1)
                    .addComponent(Map_7_2)
                    .addComponent(Map_7_3)
                    .addComponent(Map_7_4)
                    .addComponent(Map_7_5)
                    .addComponent(Map_7_6)
                    .addComponent(Map_7_7))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        jPanel2.setBackground(new java.awt.Color(255, 255, 255));

        jLabel1.setFont(new java.awt.Font("Segoe UI Historic", 1, 18)); // NOI18N
        jLabel1.setText("PC/AI color:");

        jLabel2.setFont(new java.awt.Font("Segoe UI Historic", 1, 18)); // NOI18N
        jLabel2.setText("Your color:");

        playerNameLabelYour.setFont(new java.awt.Font("Sitka Banner", 0, 18)); // NOI18N
        playerNameLabelYour.setText("Name");

        playerNameLabelPCAI.setFont(new java.awt.Font("Sitka Banner", 0, 18)); // NOI18N
        playerNameLabelPCAI.setText("Name");

        jLabel3.setFont(new java.awt.Font("Segoe UI Historic", 1, 18)); // NOI18N
        jLabel3.setText("Black stones:");

        jLabel4.setFont(new java.awt.Font("Segoe UI Historic", 1, 18)); // NOI18N
        jLabel4.setText("White stones:");

        whiteStonesNumberLabel.setFont(new java.awt.Font("Sitka Banner", 0, 18)); // NOI18N
        whiteStonesNumberLabel.setText("Number");

        blackStonesNumberLabel.setFont(new java.awt.Font("Sitka Banner", 0, 18)); // NOI18N
        blackStonesNumberLabel.setText("Number");

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                            .addComponent(jLabel3, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jLabel4, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(blackStonesNumberLabel)
                            .addComponent(whiteStonesNumberLabel)))
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addComponent(jLabel2)
                        .addGap(30, 30, 30)
                        .addComponent(playerNameLabelYour))
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addComponent(jLabel1)
                        .addGap(22, 22, 22)
                        .addComponent(playerNameLabelPCAI)))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGap(26, 26, 26)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel2)
                    .addComponent(playerNameLabelYour))
                .addGap(18, 18, 18)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1)
                    .addComponent(playerNameLabelPCAI))
                .addGap(52, 52, 52)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel4)
                    .addComponent(whiteStonesNumberLabel))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel3)
                    .addComponent(blackStonesNumberLabel))
                .addContainerGap(261, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(6, 6, 6)
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(26, 26, 26)
                .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    GameMain GM = new GameMain();
    
    public void gameStart(boolean Color){
        GM.newGame(Color);
        screanUpdate();
    }
    
    public void screanUpdate(){
        for(int i = 0; i < 8; i++)
        {
            for(int j = 0; j < 8; j++)
            {
               if(GM.gameArena[i][j] == 1)
                {
                    buttonIconChange(i, j, 1);
                }
               else if(GM.gameArena[i][j] == 2)
                {
                    buttonIconChange(i, j, 2);
                } 
            }
        }
        GM.checkStonesNumber();
        changeStonesNumberText(GM.whiteStonesNmbr, GM.blackStonesNmbr);
    }
    
    public void buttonIconChange(int x, int y, int Color){
        /*String mapName = "Map_" + x + "_" + y;
        JLabel label = new JLabel(mapName);
        if(Color == 1){
            label.setIcon(changeToBlackStone());
        }
        else if(Color == 2){
            label.setIcon(changeToWhiteStone());
        }*/
        if(y == 0 && x == 0 && Color == 1)
        {
            Map_0_0.setIcon(changeToBlackStone());
        }
        else if(y == 0 && x == 0 && Color == 2)
        {
            Map_0_0.setIcon(changeToWhiteStone());
        }
        else if(y == 1 && x == 0 && Color == 1)
        {
            Map_0_1.setIcon(changeToBlackStone());
        }
        else if(y == 1 && x == 0 && Color == 2)
        {
            Map_0_1.setIcon(changeToWhiteStone());
        }
        else if(y == 2 && x == 0 && Color == 1)
        {
            Map_0_2.setIcon(changeToBlackStone());
        }
        else if(y == 2 && x == 0 && Color == 2)
        {
            Map_0_2.setIcon(changeToWhiteStone());
        }
        else if(y == 3 && x == 0 && Color == 1)
        {
            Map_0_3.setIcon(changeToBlackStone());
        }
        else if(y == 3 && x == 0 && Color == 2)
        {
            Map_0_3.setIcon(changeToWhiteStone());
        }
        else if(y == 4 && x == 0 && Color == 1)
        {
            Map_0_4.setIcon(changeToBlackStone());
        }
        else if(y == 4 && x == 0 && Color == 2)
        {
            Map_0_4.setIcon(changeToWhiteStone());
        }
        else if(y == 5 && x == 0 && Color == 1)
        {
            Map_0_5.setIcon(changeToBlackStone());
        }
        else if(y == 5 && x == 0 && Color == 2)
        {
            Map_0_5.setIcon(changeToWhiteStone());
        }
        else if(y == 6 && x == 0 && Color == 1)
        {
            Map_0_6.setIcon(changeToBlackStone());
        }
        else if(y == 6 && x == 0 && Color == 2)
        {
            Map_0_6.setIcon(changeToWhiteStone());
        }
        else if(y == 7 && x == 0 && Color == 1)
        {
            Map_0_7.setIcon(changeToBlackStone());
        }
        else if(y == 7 && x == 0 && Color == 2)
        {
            Map_0_7.setIcon(changeToWhiteStone());
        }
        else if(y == 0 && x == 1 && Color == 1)
        {
            Map_1_0.setIcon(changeToBlackStone());
        }
        else if(y == 0 && x == 1 && Color == 2)
        {
            Map_1_0.setIcon(changeToWhiteStone());
        }
        else if(y == 1 && x == 1 && Color == 1)
        {
            Map_1_1.setIcon(changeToBlackStone());
        }
        else if(y == 1 && x == 1 && Color == 2)
        {
            Map_1_1.setIcon(changeToWhiteStone());
        }
        else if(y == 2 && x == 1 && Color == 1)
        {
            Map_1_2.setIcon(changeToBlackStone());
        }
        else if(y == 2 && x == 1 && Color == 2)
        {
            Map_1_2.setIcon(changeToWhiteStone());
        }
        else if(y == 3 && x == 1 && Color == 1)
        {
            Map_1_3.setIcon(changeToBlackStone());
        }
        else if(y == 3 && x == 1 && Color == 2)
        {
            Map_1_3.setIcon(changeToWhiteStone());
        }
        else if(y == 4 && x == 1 && Color == 1)
        {
            Map_1_4.setIcon(changeToBlackStone());
        }
        else if(y == 4 && x == 1 && Color == 2)
        {
            Map_1_4.setIcon(changeToWhiteStone());
        }
        else if(y == 5 && x == 1 && Color == 1)
        {
            Map_1_5.setIcon(changeToBlackStone());
        }
        else if(y == 5 && x == 1 && Color == 2)
        {
            Map_1_5.setIcon(changeToWhiteStone());
        }
        else if(y == 6 && x == 1 && Color == 1)
        {
            Map_1_6.setIcon(changeToBlackStone());
        }
        else if(y == 6 && x == 1 && Color == 2)
        {
            Map_1_6.setIcon(changeToWhiteStone());
        }
        else if(y == 7 && x == 1 && Color == 1)
        {
            Map_1_7.setIcon(changeToBlackStone());
        }
        else if(y == 7 && x == 1 && Color == 2)
        {
            Map_1_7.setIcon(changeToWhiteStone());
        }
        else if(y == 0 && x == 2 && Color == 1)
        {
            Map_2_0.setIcon(changeToBlackStone());
        }
        else if(y == 0 && x == 2 && Color == 2)
        {
            Map_2_0.setIcon(changeToWhiteStone());
        }
        else if(y == 1 && x == 2 && Color == 1)
        {
            Map_2_1.setIcon(changeToBlackStone());
        }
        else if(y == 1 && x == 2 && Color == 2)
        {
            Map_2_1.setIcon(changeToWhiteStone());
        }
        else if(y == 2 && x == 2 && Color == 1)
        {
            Map_2_2.setIcon(changeToBlackStone());
        }
        else if(y == 2 && x == 2 && Color == 2)
        {
            Map_2_2.setIcon(changeToWhiteStone());
        }
        else if(y == 3 && x == 2 && Color == 1)
        {
            Map_2_3.setIcon(changeToBlackStone());
        }
        else if(y == 3 && x == 2 && Color == 2)
        {
            Map_2_3.setIcon(changeToWhiteStone());
        }
        else if(y == 4 && x == 2 && Color == 1)
        {
            Map_2_4.setIcon(changeToBlackStone());
        }
        else if(y == 4 && x == 2 && Color == 2)
        {
            Map_2_4.setIcon(changeToWhiteStone());
        }
        else if(y == 5 && x == 2 && Color == 1)
        {
            Map_2_5.setIcon(changeToBlackStone());
        }
        else if(y == 5 && x == 2 && Color == 2)
        {
            Map_2_5.setIcon(changeToWhiteStone());
        }
        else if(y == 6 && x == 2 && Color == 1)
        {
            Map_2_6.setIcon(changeToBlackStone());
        }
        else if(y == 6 && x == 2 && Color == 2)
        {
            Map_2_6.setIcon(changeToWhiteStone());
        }
        else if(y == 7 && x == 2 && Color == 1)
        {
            Map_2_7.setIcon(changeToBlackStone());
        }
        else if(y == 7 && x == 2 && Color == 2)
        {
            Map_2_7.setIcon(changeToWhiteStone());
        }
        else if(y == 0 && x == 3 && Color == 1)
        {
            Map_3_0.setIcon(changeToBlackStone());
        }
        else if(y == 0 && x == 3 && Color == 2)
        {
            Map_3_0.setIcon(changeToWhiteStone());
        }
        else if(y == 1 && x == 3 && Color == 1)
        {
            Map_3_1.setIcon(changeToBlackStone());
        }
        else if(y == 1 && x == 3 && Color == 2)
        {
            Map_3_1.setIcon(changeToWhiteStone());
        }
        else if(y == 2 && x == 3 && Color == 1)
        {
            Map_3_2.setIcon(changeToBlackStone());
        }
        else if(y == 2 && x == 3 && Color == 2)
        {
            Map_3_2.setIcon(changeToWhiteStone());
        }
        else if(y == 3 && x == 3 && Color == 1)
        {
            Map_3_3.setIcon(changeToBlackStone());
        }
        else if(y == 3 && x == 3 && Color == 2)
        {
            Map_3_3.setIcon(changeToWhiteStone());
        }
        else if(y == 3 && x == 3 && Color == 1)
        {
            Map_3_4.setIcon(changeToBlackStone());
        }
        else if(y == 4 && x == 3 && Color == 2)
        {
            Map_3_4.setIcon(changeToWhiteStone());
        }
        else if(y == 5 && x == 3 && Color == 1)
        {
            Map_3_5.setIcon(changeToBlackStone());
        }
        else if(y == 5 && x == 3 && Color == 2)
        {
            Map_3_5.setIcon(changeToWhiteStone());
        }
        else if(y == 6 && x == 3 && Color == 1)
        {
            Map_3_6.setIcon(changeToBlackStone());
        }
        else if(y == 6 && x == 3 && Color == 2)
        {
            Map_3_6.setIcon(changeToWhiteStone());
        }
        else if(y == 7 && x == 3 && Color == 1)
        {
            Map_3_7.setIcon(changeToBlackStone());
        }
        else if(y == 7 && x == 3 && Color == 2)
        {
            Map_3_7.setIcon(changeToWhiteStone());
        }
        else if(y == 0 && x == 4 && Color == 1)
        {
            Map_4_0.setIcon(changeToBlackStone());
        }
        else if(y == 0 && x == 4 && Color == 2)
        {
            Map_4_0.setIcon(changeToWhiteStone());
        }
        else if(y == 1 && x == 4 && Color == 1)
        {
            Map_4_1.setIcon(changeToBlackStone());
        }
        else if(y == 1 && x == 4 && Color == 2)
        {
            Map_4_1.setIcon(changeToWhiteStone());
        }
        else if(y == 2 && x == 4 && Color == 1)
        {
            Map_4_2.setIcon(changeToBlackStone());
        }
        else if(y == 2 && x == 4 && Color == 2)
        {
            Map_4_2.setIcon(changeToWhiteStone());
        }
        else if(y == 3 && x == 4 && Color == 1)
        {
            Map_4_3.setIcon(changeToBlackStone());
        }
        else if(y == 3 && x == 4 && Color == 2)
        {
            Map_4_3.setIcon(changeToWhiteStone());
        }
        else if(y == 4 && x == 4 && Color == 1)
        {
            Map_4_4.setIcon(changeToBlackStone());
        }
        else if(y == 4 && x == 4 && Color == 2)
        {
            Map_4_4.setIcon(changeToWhiteStone());
        }
        else if(y == 5 && x == 4 && Color == 1)
        {
            Map_4_5.setIcon(changeToBlackStone());
        }
        else if(y == 5 && x == 4 && Color == 2)
        {
            Map_4_5.setIcon(changeToWhiteStone());
        }
        else if(y == 6 && x == 4 && Color == 1)
        {
            Map_4_6.setIcon(changeToBlackStone());
        }
        else if(y == 6 && x == 4 && Color == 2)
        {
            Map_4_6.setIcon(changeToWhiteStone());
        }
        else if(y == 7 && x == 4 && Color == 1)
        {
            Map_4_7.setIcon(changeToBlackStone());
        }
        else if(y == 7 && x == 4 && Color == 2)
        {
            Map_4_7.setIcon(changeToWhiteStone());
        }
        else if(y == 0 && x == 5 && Color == 1)
        {
            Map_5_0.setIcon(changeToBlackStone());
        }
        else if(y == 0 && x == 5 && Color == 2)
        {
            Map_5_0.setIcon(changeToWhiteStone());
        }
        else if(y == 1 && x == 5 && Color == 1)
        {
            Map_5_1.setIcon(changeToBlackStone());
        }
        else if(y == 1 && x == 5 && Color == 2)
        {
            Map_5_1.setIcon(changeToWhiteStone());
        }
        else if(y == 2 && x == 5 && Color == 1)
        {
            Map_5_2.setIcon(changeToBlackStone());
        }
        else if(y == 2 && x == 5 && Color == 2)
        {
            Map_5_2.setIcon(changeToWhiteStone());
        }
        else if(y == 3 && x == 5 && Color == 1)
        {
            Map_5_3.setIcon(changeToBlackStone());
        }
        else if(y == 3 && x == 5 && Color == 2)
        {
            Map_5_3.setIcon(changeToWhiteStone());
        }
        else if(y == 4 && x == 5 && Color == 1)
        {
            Map_5_4.setIcon(changeToBlackStone());
        }
        else if(y == 4 && x == 5 && Color == 2)
        {
            Map_5_4.setIcon(changeToWhiteStone());
        }
        else if(y == 5 && x == 5 && Color == 1)
        {
            Map_5_5.setIcon(changeToBlackStone());
        }
        else if(y == 5 && x == 5 && Color == 2)
        {
            Map_5_5.setIcon(changeToWhiteStone());
        }
        else if(y == 6 && x == 5 && Color == 1)
        {
            Map_5_6.setIcon(changeToBlackStone());
        }
        else if(y == 6 && x == 5 && Color == 2)
        {
            Map_5_6.setIcon(changeToWhiteStone());
        }
        else if(y == 7 && x == 5 && Color == 1)
        {
            Map_5_7.setIcon(changeToBlackStone());
        }
        else if(y == 7 && x == 5 && Color == 2)
        {
            Map_5_7.setIcon(changeToWhiteStone());
        }
        else if(y == 0 && x == 6 && Color == 1)
        {
            Map_6_0.setIcon(changeToBlackStone());
        }
        else if(y == 0 && x == 6 && Color == 2)
        {
            Map_6_0.setIcon(changeToWhiteStone());
        }
        else if(y == 1 && x == 6 && Color == 1)
        {
            Map_6_1.setIcon(changeToBlackStone());
        }
        else if(y == 1 && x == 6 && Color == 2)
        {
            Map_6_1.setIcon(changeToWhiteStone());
        }
        else if(y == 2 && x == 6 && Color == 1)
        {
            Map_6_2.setIcon(changeToBlackStone());
        }
        else if(y == 2 && x == 6 && Color == 2)
        {
            Map_6_2.setIcon(changeToWhiteStone());
        }
        else if(y == 3 && x == 6 && Color == 1)
        {
            Map_6_3.setIcon(changeToBlackStone());
        }
        else if(y == 3 && x == 6 && Color == 2)
        {
            Map_6_3.setIcon(changeToWhiteStone());
        }
        else if(y == 4 && x == 6 && Color == 1)
        {
            Map_6_4.setIcon(changeToBlackStone());
        }
        else if(y == 4 && x == 6 && Color == 2)
        {
            Map_6_4.setIcon(changeToWhiteStone());
        }
        else if(y == 5 && x == 6 && Color == 1)
        {
            Map_6_5.setIcon(changeToBlackStone());
        }
        else if(y == 5 && x == 6 && Color == 2)
        {
            Map_6_5.setIcon(changeToWhiteStone());
        }
        else if(y == 6 && x == 6 && Color == 1)
        {
            Map_6_6.setIcon(changeToBlackStone());
        }
        else if(y == 6 && x == 6 && Color == 2)
        {
            Map_6_6.setIcon(changeToWhiteStone());
        }
        else if(y == 7 && x == 6 && Color == 1)
        {
            Map_6_7.setIcon(changeToBlackStone());
        }
        else if(y == 7 && x == 6 && Color == 2)
        {
            Map_6_7.setIcon(changeToWhiteStone());
        }
        else if(y == 0 && x == 7 && Color == 1)
        {
            Map_7_0.setIcon(changeToBlackStone());
        }
        else if(y == 0 && x == 7 && Color == 2)
        {
            Map_7_0.setIcon(changeToWhiteStone());
        }
        else if(y == 1 && x == 7 && Color == 1)
        {
            Map_7_1.setIcon(changeToBlackStone());
        }
        else if(y == 1 && x == 7 && Color == 2)
        {
            Map_7_1.setIcon(changeToWhiteStone());
        }
        else if(y == 2 && x == 7 && Color == 1)
        {
            Map_7_2.setIcon(changeToBlackStone());
        }
        else if(y == 2 && x == 7 && Color == 2)
        {
            Map_7_2.setIcon(changeToWhiteStone());
        }
        else if(y == 3 && x == 7 && Color == 1)
        {
            Map_7_3.setIcon(changeToBlackStone());
        }
        else if(y == 3 && x == 7 && Color == 2)
        {
            Map_7_3.setIcon(changeToWhiteStone());
        }
        else if(y == 4 && x == 7 && Color == 1)
        {
            Map_7_4.setIcon(changeToBlackStone());
        }
        else if(y == 4 && x == 7 && Color == 2)
        {
            Map_7_4.setIcon(changeToWhiteStone());
        }
        else if(y == 5 && x == 7 && Color == 1)
        {
            Map_7_5.setIcon(changeToBlackStone());
        }
        else if(y == 5 && x == 7 && Color == 2)
        {
            Map_7_5.setIcon(changeToWhiteStone());
        }
        else if(y == 6 && x == 7 && Color == 1)
        {
            Map_7_6.setIcon(changeToBlackStone());
        }
        else if(y == 6 && x == 7 && Color == 2)
        {
            Map_7_6.setIcon(changeToWhiteStone());
        }
        else if(y == 7 && x == 7 && Color == 1)
        {
            Map_7_7.setIcon(changeToBlackStone());
        }
        else if(y == 7 && x == 7 && Color == 2)
        {
            Map_7_7.setIcon(changeToWhiteStone());
        }
    }
    
    public void changeStonesNumberText(int WhiteStonesNmbr, int BlackStonesNmbr){
        String white = Integer.toString(WhiteStonesNmbr);
        String black = Integer.toString(BlackStonesNmbr);
        blackStonesNumberLabel.setText(black);
        whiteStonesNumberLabel.setText(white);
    }
    
    public ImageIcon changeToWhiteStone(){
        String currentDirString = System.getProperty("user.dir");
        String iconName = currentDirString + "\\src\\src\\WhiteStone.png";
        ImageIcon icon = new ImageIcon(iconName);
        return icon;
    }
    
    public ImageIcon changeToBlackStone(){
        String currentDirString = System.getProperty("user.dir");
        String iconName = currentDirString + "\\src\\src\\BlackStone.png";
        ImageIcon icon = new ImageIcon(iconName);
        return icon;
    }
    
    public void changePlayerName(boolean changePlayerColor){
        if(changePlayerColor == true)
        {
            playerNameLabelYour.setText("Black");
            playerNameLabelPCAI.setText("White");
        }
        else
        {
            playerNameLabelYour.setText("White");
            playerNameLabelPCAI.setText("Black");
        }
    }
    
    private void Map_0_0MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_Map_0_0MouseClicked
        if(GM.move == true)
        {
            GM.mapSlotPicked(0, 0, 1);
        }
        else if(GM.move == false)
        {
            GM.mapSlotPicked(0, 0, 2);
        }
        screanUpdate();
    }//GEN-LAST:event_Map_0_0MouseClicked

    private void Map_0_5MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_Map_0_5MouseClicked
       if(GM.move == true)
        {
            GM.mapSlotPicked(0, 5, 1);
        }
        else if(GM.move == false)
        {
            GM.mapSlotPicked(0, 5, 2);
        }
       screanUpdate();
    }//GEN-LAST:event_Map_0_5MouseClicked

    private void Map_0_6MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_Map_0_6MouseClicked
        if(GM.move == true)
        {
            GM.mapSlotPicked(0, 6, 1);
        }
        else if(GM.move == false)
        {
            GM.mapSlotPicked(0, 6, 2);
        }
        screanUpdate();
    }//GEN-LAST:event_Map_0_6MouseClicked

    private void Map_0_7MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_Map_0_7MouseClicked
        if(GM.move == true)
        {
            GM.mapSlotPicked(0, 7, 1);
        }
        else if(GM.move == false)
        {
            GM.mapSlotPicked(0, 7, 2);
        }
        screanUpdate();
    }//GEN-LAST:event_Map_0_7MouseClicked

    private void Map_0_1MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_Map_0_1MouseClicked
        if(GM.move == true)
        {
            GM.mapSlotPicked(0, 1, 1);
        }
        else if(GM.move == false)
        {
            GM.mapSlotPicked(0, 1, 2);
        }
        screanUpdate();
    }//GEN-LAST:event_Map_0_1MouseClicked

    private void Map_0_3MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_Map_0_3MouseClicked
        if(GM.move == true)
        {
            GM.mapSlotPicked(0, 3, 1);
        }
        else if(GM.move == false)
        {
            GM.mapSlotPicked(0, 3, 2);
        }
        screanUpdate();
    }//GEN-LAST:event_Map_0_3MouseClicked

    private void Map_0_4MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_Map_0_4MouseClicked
        if(GM.move == true)
        {
            GM.mapSlotPicked(0, 4, 1);
        }
        else if(GM.move == false)
        {
            GM.mapSlotPicked(0, 4, 2);
        }
        screanUpdate();
    }//GEN-LAST:event_Map_0_4MouseClicked

    private void Map_0_2MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_Map_0_2MouseClicked
        if(GM.move == true)
        {
            GM.mapSlotPicked(0, 2, 1);
        }
        else if(GM.move == false)
        {
            GM.mapSlotPicked(0, 2, 2);
        }
        screanUpdate();
    }//GEN-LAST:event_Map_0_2MouseClicked

    private void Map_1_0MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_Map_1_0MouseClicked
        if(GM.move == true)
        {
            GM.mapSlotPicked(1, 0, 1);
        }
        else if(GM.move == false)
        {
            GM.mapSlotPicked(1, 0, 2);    
        }
        screanUpdate();
    }//GEN-LAST:event_Map_1_0MouseClicked

    private void Map_1_1MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_Map_1_1MouseClicked
        if(GM.move == true)
        {
            GM.mapSlotPicked(1, 1, 1);
        }
        else if(GM.move == false)
        {
            GM.mapSlotPicked(1, 1, 2);
        }
        screanUpdate();
    }//GEN-LAST:event_Map_1_1MouseClicked

    private void Map_1_2MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_Map_1_2MouseClicked
        if(GM.move == true)
        {
            GM.mapSlotPicked(1, 2, 1);
        }
        else if(GM.move == false)
        {
            GM.mapSlotPicked(1, 2, 2);
        }
        screanUpdate();
    }//GEN-LAST:event_Map_1_2MouseClicked

    private void Map_1_3MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_Map_1_3MouseClicked
        if(GM.move == true)
        {
            GM.mapSlotPicked(1, 3, 1);
        }
        else if(GM.move == false)
        {
            GM.mapSlotPicked(1, 3, 2);
        }
        screanUpdate();
    }//GEN-LAST:event_Map_1_3MouseClicked

    private void Map_1_4MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_Map_1_4MouseClicked
        if(GM.move == true)
        {
            GM.mapSlotPicked(1, 4, 1);
        }
        else if(GM.move == false)
        {
            GM.mapSlotPicked(1, 4, 2);
        }
        screanUpdate();
    }//GEN-LAST:event_Map_1_4MouseClicked

    private void Map_1_5MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_Map_1_5MouseClicked
        if(GM.move == true)
        {
            GM.mapSlotPicked(1, 5, 1);
        }
        else if(GM.move == false)
        {
            GM.mapSlotPicked(1, 5, 2);
        }
        screanUpdate();
    }//GEN-LAST:event_Map_1_5MouseClicked

    private void Map_1_6MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_Map_1_6MouseClicked
        if(GM.move == true)
        {
            GM.mapSlotPicked(1, 6, 1);
        }
        else if(GM.move == false)
        {
            GM.mapSlotPicked(1, 6, 2);
        }
        screanUpdate();
    }//GEN-LAST:event_Map_1_6MouseClicked

    private void Map_1_7MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_Map_1_7MouseClicked
        if(GM.move == true)
        {
            GM.mapSlotPicked(1, 7, 1);
        }
        else if(GM.move == false)
        {
            GM.mapSlotPicked(1, 7, 2);
        }
        screanUpdate();
    }//GEN-LAST:event_Map_1_7MouseClicked

    private void Map_2_0MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_Map_2_0MouseClicked
        if(GM.move == true)
        {
            GM.mapSlotPicked(2, 0, 1);
        }
        else if(GM.move == false)
        {
            GM.mapSlotPicked(2, 0, 2);
        }
        screanUpdate();
    }//GEN-LAST:event_Map_2_0MouseClicked

    private void Map_2_1MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_Map_2_1MouseClicked
        if(GM.move == true)
        {
            GM.mapSlotPicked(2, 1, 1);
        }
        else if(GM.move == false)
        {
            GM.mapSlotPicked(2, 1, 2);
        }
        screanUpdate();
    }//GEN-LAST:event_Map_2_1MouseClicked

    private void Map_2_2MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_Map_2_2MouseClicked
        if(GM.move == true)
        {
            GM.mapSlotPicked(2, 2, 1);
        }
        else if(GM.move == false)
        {
            GM.mapSlotPicked(2, 2, 2);
        }
        screanUpdate();
    }//GEN-LAST:event_Map_2_2MouseClicked

    private void Map_2_3MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_Map_2_3MouseClicked
        if(GM.move == true)
        {
            GM.mapSlotPicked(2, 3, 1);
        }
        else if(GM.move == false)
        {
            GM.mapSlotPicked(2, 3, 2);
        }
        screanUpdate();
    }//GEN-LAST:event_Map_2_3MouseClicked

    private void Map_2_4MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_Map_2_4MouseClicked
        if(GM.move == true)
        {
            GM.mapSlotPicked(2, 4, 1);
        }
        else if(GM.move == false)
        {
            GM.mapSlotPicked(2, 4, 2);
        }
        screanUpdate();
    }//GEN-LAST:event_Map_2_4MouseClicked

    private void Map_2_5MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_Map_2_5MouseClicked
        if(GM.move == true)
        {
            GM.mapSlotPicked(2, 5, 1);
        }
        else if(GM.move == false)
        {
            GM.mapSlotPicked(2, 5, 2);
        }
        screanUpdate();
    }//GEN-LAST:event_Map_2_5MouseClicked

    private void Map_2_6MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_Map_2_6MouseClicked
        if(GM.move == true)
        {
            GM.mapSlotPicked(2, 6, 1);
        }
        else if(GM.move == false)
        {
            GM.mapSlotPicked(2, 6, 2);   
        }
        screanUpdate();
    }//GEN-LAST:event_Map_2_6MouseClicked

    private void Map_2_7MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_Map_2_7MouseClicked
        if(GM.move == true)
        {
            GM.mapSlotPicked(2, 7, 1);
        }
        else if(GM.move == false)
        {
            GM.mapSlotPicked(2, 7, 2);
        }
        screanUpdate();
    }//GEN-LAST:event_Map_2_7MouseClicked

    private void Map_3_0MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_Map_3_0MouseClicked
        if(GM.move == true)
        {
            GM.mapSlotPicked(3, 0, 1);
        }
        else if(GM.move == false)
        {
            GM.mapSlotPicked(3, 0, 2);
        }
        screanUpdate();
    }//GEN-LAST:event_Map_3_0MouseClicked

    private void Map_3_1MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_Map_3_1MouseClicked
        if(GM.move == true)
        {
            GM.mapSlotPicked(3, 1, 1);
        }
        else if(GM.move == false)
        {
            GM.mapSlotPicked(3, 1, 2);
        }
        screanUpdate();
    }//GEN-LAST:event_Map_3_1MouseClicked

    private void Map_3_2MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_Map_3_2MouseClicked
        if(GM.move == true)
        {
            GM.mapSlotPicked(3, 2, 1);
        }
        else if(GM.move == false)
        {
            GM.mapSlotPicked(3, 2, 2);
        }
        screanUpdate();
    }//GEN-LAST:event_Map_3_2MouseClicked

    private void Map_3_3MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_Map_3_3MouseClicked
        if(GM.move == true)
        {
            GM.mapSlotPicked(3, 3, 1);
        }
        else if(GM.move == false)
        {
            GM.mapSlotPicked(3, 3, 2);
        }
        screanUpdate();
    }//GEN-LAST:event_Map_3_3MouseClicked

    private void Map_3_4MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_Map_3_4MouseClicked
        if(GM.move == true)
        {
            GM.mapSlotPicked(3, 4, 1);
        }
        else if(GM.move == false)
        {
            GM.mapSlotPicked(3, 4, 2);
        }
        screanUpdate();
    }//GEN-LAST:event_Map_3_4MouseClicked

    private void Map_3_5MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_Map_3_5MouseClicked
        if(GM.move == true)
        {
            GM.mapSlotPicked(3, 5, 1);
        }
        else if(GM.move == false)
        {
            GM.mapSlotPicked(3, 5, 2);
        }
        screanUpdate();
    }//GEN-LAST:event_Map_3_5MouseClicked

    private void Map_3_6MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_Map_3_6MouseClicked
        if(GM.move == true)
        {
            GM.mapSlotPicked(3, 6, 1);
        }
        else if(GM.move == false)
        {
            GM.mapSlotPicked(3, 6, 2);
        }
        screanUpdate();
    }//GEN-LAST:event_Map_3_6MouseClicked

    private void Map_3_7MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_Map_3_7MouseClicked
        if(GM.move == true)
        {
            GM.mapSlotPicked(3, 7, 1);
        }
        else if(GM.move == false)
        {
            GM.mapSlotPicked(3, 7, 2);
        }
        screanUpdate();
    }//GEN-LAST:event_Map_3_7MouseClicked

    private void Map_4_0MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_Map_4_0MouseClicked
        if(GM.move == true)
        {
            GM.mapSlotPicked(4, 0, 1);
        }
        else if(GM.move == false)
        {
            GM.mapSlotPicked(4, 0, 2);
        }
        screanUpdate();
    }//GEN-LAST:event_Map_4_0MouseClicked

    private void Map_4_1MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_Map_4_1MouseClicked
        if(GM.move == true)
        {
            GM.mapSlotPicked(4, 1, 1);
        }
        else if(GM.move == false)
        {
            GM.mapSlotPicked(4, 1, 2);
        }
        screanUpdate();
    }//GEN-LAST:event_Map_4_1MouseClicked

    private void Map_4_2MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_Map_4_2MouseClicked
        if(GM.move == true)
        {
            GM.mapSlotPicked(4, 2, 1);
        }
        else if(GM.move == false)
        {
            GM.mapSlotPicked(4, 2, 2);
        }
        screanUpdate();
    }//GEN-LAST:event_Map_4_2MouseClicked

    private void Map_4_3MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_Map_4_3MouseClicked
        if(GM.move == true)
        {
            GM.mapSlotPicked(4, 3, 1);
        }
        else if(GM.move == false)
        {
            GM.mapSlotPicked(4, 3, 2);
        }
        screanUpdate();
    }//GEN-LAST:event_Map_4_3MouseClicked

    private void Map_4_4MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_Map_4_4MouseClicked
        if(GM.move == true)
        {
            GM.mapSlotPicked(4, 4, 1);
        }
        else if(GM.move == false)
        {
            GM.mapSlotPicked(4, 4, 2);
        }
        screanUpdate();
    }//GEN-LAST:event_Map_4_4MouseClicked

    private void Map_4_5MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_Map_4_5MouseClicked
        if(GM.move == true)
        {
            GM.mapSlotPicked(4, 5, 1);
        }
        else if(GM.move == false)
        {
            GM.mapSlotPicked(4, 5, 2);
        }
        screanUpdate();
    }//GEN-LAST:event_Map_4_5MouseClicked

    private void Map_4_6MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_Map_4_6MouseClicked
        if(GM.move == true)
        {
            GM.mapSlotPicked(4, 6, 1);
        }
        else if(GM.move == false)
        {
            GM.mapSlotPicked(4, 6, 2);
        }
        screanUpdate();
    }//GEN-LAST:event_Map_4_6MouseClicked

    private void Map_4_7MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_Map_4_7MouseClicked
        if(GM.move == true)
        {
            GM.mapSlotPicked(4, 7, 1);
        }
        else if(GM.move == false)
        {
            GM.mapSlotPicked(4, 7, 2);
        }
        screanUpdate();
    }//GEN-LAST:event_Map_4_7MouseClicked

    private void Map_5_0MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_Map_5_0MouseClicked
        if(GM.move == true)
        {
            GM.mapSlotPicked(5, 0, 1);
        }
        else if(GM.move == false)
        {
            GM.mapSlotPicked(5, 0, 2);
        }
        screanUpdate();
    }//GEN-LAST:event_Map_5_0MouseClicked

    private void Map_5_3MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_Map_5_3MouseClicked
        if(GM.move == true)
        {
            GM.mapSlotPicked(5, 3, 1);
        }
        else if(GM.move == false)
        {
            GM.mapSlotPicked(5, 3, 2);
        }
        screanUpdate();
    }//GEN-LAST:event_Map_5_3MouseClicked

    private void Map_5_4MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_Map_5_4MouseClicked
        if(GM.move == true)
        {
            GM.mapSlotPicked(5, 4, 1);
        }
        else if(GM.move == false)
        {
            GM.mapSlotPicked(5, 4, 2);
        }
        screanUpdate();
    }//GEN-LAST:event_Map_5_4MouseClicked

    private void Map_5_5MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_Map_5_5MouseClicked
        if(GM.move == true)
        {
            GM.mapSlotPicked(5, 5, 1);
        }
        else if(GM.move == false)
        {
            GM.mapSlotPicked(5, 5, 2);
        }
        screanUpdate();
    }//GEN-LAST:event_Map_5_5MouseClicked

    private void Map_5_6MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_Map_5_6MouseClicked
        if(GM.move == true)
        {
            GM.mapSlotPicked(5, 6, 1);
        }
        else if(GM.move == false)
        {
            GM.mapSlotPicked(5, 6, 2);
        }
        screanUpdate();
    }//GEN-LAST:event_Map_5_6MouseClicked

    private void Map_5_7MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_Map_5_7MouseClicked
        if(GM.move == true)
        {
            GM.mapSlotPicked(5, 7, 1);
        }
        else if(GM.move == false)
        {
            GM.mapSlotPicked(5, 7, 2);
        }
        screanUpdate();
    }//GEN-LAST:event_Map_5_7MouseClicked

    private void Map_6_0MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_Map_6_0MouseClicked
        if(GM.move == true)
        {
            GM.mapSlotPicked(6, 0, 1);
        }
        else if(GM.move == false)
        {
            GM.mapSlotPicked(6, 0, 2);
        }
        screanUpdate();
    }//GEN-LAST:event_Map_6_0MouseClicked

    private void Map_5_2MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_Map_5_2MouseClicked
        if(GM.move == true)
        {
            GM.mapSlotPicked(5, 2, 1);
        }
        else if(GM.move == false)
        {
            GM.mapSlotPicked(5, 2, 2);
        }
        screanUpdate();
    }//GEN-LAST:event_Map_5_2MouseClicked

    private void Map_6_1MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_Map_6_1MouseClicked
        if(GM.move == true)
        {
            GM.mapSlotPicked(6, 1, 1);
        }
        else if(GM.move == false)
        {
            GM.mapSlotPicked(6, 1, 2);
        }
        screanUpdate();
    }//GEN-LAST:event_Map_6_1MouseClicked

    private void Map_6_2MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_Map_6_2MouseClicked
        if(GM.move == true)
        {
            GM.mapSlotPicked(6, 2, 1);
        }
        else if(GM.move == false)
        {
            GM.mapSlotPicked(6, 2, 2);
        }
        screanUpdate();
    }//GEN-LAST:event_Map_6_2MouseClicked

    private void Map_6_3MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_Map_6_3MouseClicked
        if(GM.move == true)
        {
            GM.mapSlotPicked(6, 3, 1);
        }
        else if(GM.move == false)
        {
            GM.mapSlotPicked(6, 3, 2);
        }
        screanUpdate();
    }//GEN-LAST:event_Map_6_3MouseClicked

    private void Map_6_4MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_Map_6_4MouseClicked
        if(GM.move == true)
        {
            GM.mapSlotPicked(6, 4, 1);
        }
        else if(GM.move == false)
        {
            GM.mapSlotPicked(6, 4, 2);
        }
        screanUpdate();
    }//GEN-LAST:event_Map_6_4MouseClicked

    private void Map_6_5MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_Map_6_5MouseClicked
        if(GM.move == true)
        {
            GM.mapSlotPicked(6, 5, 1);
        }
        else if(GM.move == false)
        {
            GM.mapSlotPicked(6, 5, 2);
        }
        screanUpdate();
    }//GEN-LAST:event_Map_6_5MouseClicked

    private void Map_6_6MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_Map_6_6MouseClicked
        if(GM.move == true)
        {
            GM.mapSlotPicked(6, 6, 1);
        }
        else if(GM.move == false)
        {
            GM.mapSlotPicked(6, 6, 2);
        }
        screanUpdate();
    }//GEN-LAST:event_Map_6_6MouseClicked

    private void Map_6_7MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_Map_6_7MouseClicked
        if(GM.move == true)
        {
            GM.mapSlotPicked(6, 7, 1);
        }
        else if(GM.move == false)
        {
            GM.mapSlotPicked(6, 7, 2);
        }
        screanUpdate();
    }//GEN-LAST:event_Map_6_7MouseClicked

    private void Map_7_0MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_Map_7_0MouseClicked
        if(GM.move == true)
        {
            GM.mapSlotPicked(7, 0, 1);
        }
        else if(GM.move == false)
        {
            GM.mapSlotPicked(7, 0, 2);  
        }
        screanUpdate();
    }//GEN-LAST:event_Map_7_0MouseClicked

    private void Map_7_1MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_Map_7_1MouseClicked
        if(GM.move == true)
        {
            GM.mapSlotPicked(7, 1, 1);
        }
        else if(GM.move == false)
        {
            GM.mapSlotPicked(7, 1, 2);
        }
        screanUpdate();
    }//GEN-LAST:event_Map_7_1MouseClicked

    private void Map_7_2MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_Map_7_2MouseClicked
        if(GM.move == true)
        {
            GM.mapSlotPicked(7, 2, 1);
        }
        else if(GM.move == false)
        {
            GM.mapSlotPicked(7, 2, 2);
        }
        screanUpdate();
    }//GEN-LAST:event_Map_7_2MouseClicked

    private void Map_7_3MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_Map_7_3MouseClicked
        if(GM.move == true)
        {
            GM.mapSlotPicked(7, 3, 1);
        }
        else if(GM.move == false)
        {
            GM.mapSlotPicked(7, 3, 2);
        }
        screanUpdate();
    }//GEN-LAST:event_Map_7_3MouseClicked

    private void Map_7_4MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_Map_7_4MouseClicked
        if(GM.move == true)
        {
            GM.mapSlotPicked(7, 4, 1);
        }
        else if(GM.move == false)
        {
            GM.mapSlotPicked(7, 4, 2);
        }
        screanUpdate();
    }//GEN-LAST:event_Map_7_4MouseClicked

    private void Map_7_5MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_Map_7_5MouseClicked
        if(GM.move == true)
        {
            GM.mapSlotPicked(7, 5, 1);
        }
        else if(GM.move == false)
        {
            GM.mapSlotPicked(7, 5, 2);
        }
        screanUpdate();
    }//GEN-LAST:event_Map_7_5MouseClicked

    private void Map_7_6MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_Map_7_6MouseClicked
        if(GM.move == true)
        {
            GM.mapSlotPicked(7, 6, 1);
        }
        else if(GM.move == false)
        {
            GM.mapSlotPicked(7, 6, 2);
        }
        screanUpdate();
    }//GEN-LAST:event_Map_7_6MouseClicked

    private void Map_7_7MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_Map_7_7MouseClicked
        if(GM.move == true)
        {
            GM.mapSlotPicked(7, 7, 1);
        }
        else if(GM.move == false)
        {
            GM.mapSlotPicked(7, 7, 2);
        }
        screanUpdate();
    }//GEN-LAST:event_Map_7_7MouseClicked

    private void Map_5_1MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_Map_5_1MouseClicked
        if(GM.move == true)
        {
            GM.mapSlotPicked(5, 1, 1);
        }
        else if(GM.move == false)
        {
            GM.mapSlotPicked(5, 1, 2);
        }
        screanUpdate();
    }//GEN-LAST:event_Map_5_1MouseClicked

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(GameBoard.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(GameBoard.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(GameBoard.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(GameBoard.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        
        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new GameBoard().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    public javax.swing.JLabel Map_0_0;
    public javax.swing.JLabel Map_0_1;
    public javax.swing.JLabel Map_0_2;
    public javax.swing.JLabel Map_0_3;
    public javax.swing.JLabel Map_0_4;
    public javax.swing.JLabel Map_0_5;
    public javax.swing.JLabel Map_0_6;
    public javax.swing.JLabel Map_0_7;
    public javax.swing.JLabel Map_1_0;
    public javax.swing.JLabel Map_1_1;
    public javax.swing.JLabel Map_1_2;
    public javax.swing.JLabel Map_1_3;
    public javax.swing.JLabel Map_1_4;
    public javax.swing.JLabel Map_1_5;
    public javax.swing.JLabel Map_1_6;
    public javax.swing.JLabel Map_1_7;
    public javax.swing.JLabel Map_2_0;
    public javax.swing.JLabel Map_2_1;
    public javax.swing.JLabel Map_2_2;
    public javax.swing.JLabel Map_2_3;
    public javax.swing.JLabel Map_2_4;
    public javax.swing.JLabel Map_2_5;
    public javax.swing.JLabel Map_2_6;
    public javax.swing.JLabel Map_2_7;
    public javax.swing.JLabel Map_3_0;
    public javax.swing.JLabel Map_3_1;
    public javax.swing.JLabel Map_3_2;
    public javax.swing.JLabel Map_3_3;
    public javax.swing.JLabel Map_3_4;
    public javax.swing.JLabel Map_3_5;
    public javax.swing.JLabel Map_3_6;
    public javax.swing.JLabel Map_3_7;
    public javax.swing.JLabel Map_4_0;
    public javax.swing.JLabel Map_4_1;
    public javax.swing.JLabel Map_4_2;
    public javax.swing.JLabel Map_4_3;
    public javax.swing.JLabel Map_4_4;
    public javax.swing.JLabel Map_4_5;
    public javax.swing.JLabel Map_4_6;
    public javax.swing.JLabel Map_4_7;
    public javax.swing.JLabel Map_5_0;
    public javax.swing.JLabel Map_5_1;
    public javax.swing.JLabel Map_5_2;
    public javax.swing.JLabel Map_5_3;
    public javax.swing.JLabel Map_5_4;
    public javax.swing.JLabel Map_5_5;
    public javax.swing.JLabel Map_5_6;
    public javax.swing.JLabel Map_5_7;
    public javax.swing.JLabel Map_6_0;
    public javax.swing.JLabel Map_6_1;
    public javax.swing.JLabel Map_6_2;
    public javax.swing.JLabel Map_6_3;
    public javax.swing.JLabel Map_6_4;
    public javax.swing.JLabel Map_6_5;
    public javax.swing.JLabel Map_6_6;
    public javax.swing.JLabel Map_6_7;
    public javax.swing.JLabel Map_7_0;
    public javax.swing.JLabel Map_7_1;
    public javax.swing.JLabel Map_7_2;
    public javax.swing.JLabel Map_7_3;
    public javax.swing.JLabel Map_7_4;
    public javax.swing.JLabel Map_7_5;
    public javax.swing.JLabel Map_7_6;
    public javax.swing.JLabel Map_7_7;
    private javax.swing.JLabel blackStonesNumberLabel;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JLabel playerNameLabelPCAI;
    private javax.swing.JLabel playerNameLabelYour;
    private javax.swing.JLabel whiteStonesNumberLabel;
    // End of variables declaration//GEN-END:variables
}
